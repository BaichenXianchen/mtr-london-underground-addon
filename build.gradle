plugins {
	id 'fabric-loom' version '0.10-SNAPSHOT'
	id 'maven-publish'
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.

}

def default_minecraft_version = "1.16.5"
def minecraft_version = project.properties.containsKey("buildVersion") ? project.getProperties().get("buildVersion") : default_minecraft_version
def is_1_16 = (minecraft_version as String).startsWith("1.16")
def is_1_17 = (minecraft_version as String).startsWith("1.17")

if (is_1_16) {
	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8
} else if (is_1_17) {
	sourceCompatibility = JavaVersion.VERSION_16
	targetCompatibility = JavaVersion.VERSION_16
} else {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

archivesBaseName = project.archives_base_name
version = minecraft_version + "-" + project.mod_version
group = project.maven_group

dependencies {
	minecraft "com.mojang:minecraft:${minecraft_version}"
	mappings "net.fabricmc:yarn:${is_1_16 ? project.yarn_mappings_1_16 : is_1_17 ? project.yarn_mappings_1_17 : project.yarn_mappings_1_18}:v2"
	modImplementation "net.fabricmc:fabric-loader:${is_1_16 ? project.loader_version_1_16 : is_1_17 ? project.loader_version_1_17 : project.loader_version_1_18}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${is_1_16 ? project.fabric_version_1_16 : is_1_17 ? project.fabric_version_1_17 : project.fabric_version_1_18}"
	modImplementation "com.terraformersmc:modmenu:${is_1_16 ? project.mod_menu_version_1_16 : is_1_17 ? project.mod_menu_version_1_17 : project.mod_menu_version_1_18}"
	modImplementation "com.github.jonafanho:Minecraft-Transit-Railway:80008c1"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

task copyMappingFiles(type: Copy) {
	outputs.upToDateWhen { false }
	from is_1_16 ? "src/main/mapper1.16" : is_1_17 ? "src/main/mapper1.17" : "src/main/mapper1.18"
	into "src/main/java/mapper"
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	// The Minecraft launcher currently installs Java 8 for users, so your mod probably wants to target Java 8 too
	// JDK 9 introduced a new way of specifying this that will make sure no newer classes or methods are used.
	// We'll use that if it's available, but otherwise we'll use the older option.
	if (is_1_16) {
		def targetVersion = 8
		if (JavaVersion.current().isJava9Compatible()) {
			it.options.release = targetVersion
		}
	} else if (is_1_17) {
		it.options.release = 16
	} else {
		it.options.release = 17
	}
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	// withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
//			artifact(remapJar) {
//				builtBy remapJar
//			}
//			artifact(sourcesJar) {
//				builtBy remapSourcesJar
//			}
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

allprojects {
	repositories {
		maven {
			name = "BlueMap"
			url = "https://jitpack.io/"
		}
		maven {
			url = "https://minecraft.guntram.de/maven/"
		}
		maven {
			url = "https://maven.terraformersmc.com/"
		}
	}

	afterEvaluate {
		for (def task in it.tasks) {
			if (task != rootProject.tasks.copyMappingFiles) {
				task.dependsOn rootProject.tasks.copyMappingFiles
			}
		}
	}
}
